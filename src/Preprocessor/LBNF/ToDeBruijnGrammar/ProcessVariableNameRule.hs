-- File generated by the BNF Converter (bnfc 2.9.4.1).

-- Templates for pattern matching on abstract syntax

{-# OPTIONS_GHC -fno-warn-unused-matches #-}

module LBNF.ToDeBruijnGrammar.ProcessVariableNameRule where

import Prelude (($), Either(..), String, (++), Show, show, map, Maybe, reverse)
import qualified LBNF.LBNF.Abs
import LBNF.LBNF.Abs ( Ident(..), Grammar(..), Def(..), Item(..), Cat(..) )
import LBNF.LBNF.Abs ( Label(..), LabelId(..), Reg(..), MinimumSize(..) )
import LBNF.LBNF.Abs ( RHS(..), VariableType(..), ProfItem(..), IntList(..) )

processGrammar :: Grammar -> Grammar
processGrammar x = case x of
  LBNF.LBNF.Abs.MkGrammar defs -> MkGrammar (map processDef defs)

processDef :: Def -> Def
processDef x = case x of
  LBNF.LBNF.Abs.Rule label cat items -> Rule label cat items   -- With Variable affect
  LBNF.LBNF.Abs.Comment string -> Comment string
  LBNF.LBNF.Abs.Comments string1 string2 -> Comments string1 string2
  LBNF.LBNF.Abs.Internal label cat items -> Internal label cat items   -- With Variable affect
  LBNF.LBNF.Abs.Token ident reg -> Token ident reg            -- With Variable affect
  LBNF.LBNF.Abs.PosToken ident reg -> PosToken ident reg         -- With Variable affect
  LBNF.LBNF.Abs.Entryp idents -> Entryp idents              -- With Variable affect
  LBNF.LBNF.Abs.Separator minimumsize cat string -> Separator minimumsize cat string   -- With Variable affect
  LBNF.LBNF.Abs.Terminator minimumsize cat string -> Terminator minimumsize cat string  -- With Variable affect
  LBNF.LBNF.Abs.Coercions ident integer -> Coercions ident integer
  LBNF.LBNF.Abs.Rules ident rhss -> Rules ident rhss                   -- With Variable affect
  LBNF.LBNF.Abs.Variable variabletype cat ->          -- With Variable affect
        case variabletype of 
            VarScope -> Variable variabletype cat
            VarName -> Rule (LabNoP (Id (Ident "DBBound"))) 
                            cat 
                            [Terminal "Bound", Terminal "(", NTerminal (IdCat (Ident "Integer")), Terminal ")"]
            VarBinder -> Variable variabletype cat
  LBNF.LBNF.Abs.Layout strings -> Layout strings
  LBNF.LBNF.Abs.LayoutStop strings -> LayoutStop strings
  LBNF.LBNF.Abs.LayoutTop -> LayoutTop

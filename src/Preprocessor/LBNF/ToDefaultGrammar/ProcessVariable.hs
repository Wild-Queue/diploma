-- File generated by the BNF Converter (bnfc 2.9.4.1).

-- Templates for pattern matching on abstract syntax

{-# OPTIONS_GHC -fno-warn-unused-matches #-}

module LBNF.ToDefaultGrammar.ProcessVariable where

import Prelude (($), Either(..), String, (++), Show, show, map, Maybe (Nothing, Just), reverse)
import qualified LBNF.LBNF.Abs
import LBNF.LBNF.Abs ( Ident(..), Grammar(..), Def(..), Item(..), Cat(..) )
import LBNF.LBNF.Abs ( Label(..), LabelId(..), Reg(..), MinimumSize(..) )
import LBNF.LBNF.Abs ( RHS(..), VariableType(..), ProfItem(..), IntList(..) )

processGrammar :: Grammar -> Grammar
processGrammar x = case x of
  LBNF.LBNF.Abs.MkGrammar defs -> MkGrammar (processDefs defs)

processDefs :: [Def] -> [Def]
processDefs [def] = case processDef def of 
    Nothing -> []
    Just newDef -> [newDef]
processDefs (def:defs) = case processDef def of 
  Nothing -> processDefs defs
  Just def -> def:processDefs defs

processDef :: Def -> Maybe Def
processDef x = case x of
  LBNF.LBNF.Abs.Variable variabletype cat -> Nothing
  _ -> Just x